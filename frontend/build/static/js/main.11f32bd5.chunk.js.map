{"version":3,"sources":["components/Footer.js","actions/userAction.js","constants/userConstants.js","components/SearchBox.js","components/Header.js","constants/orderConstants.js","components/Meta.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","constants/productConstants.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","constants/cartConstants.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","store.js","reducers/productreducers.js","reducers/cartreducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","type","console","log","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","class","Header","useDispatch","useSelector","state","Navbar","collapseOnSelect","expand","bg","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Meta","description","keywords","Helmet","content","defaultProps","Rating","text","color","style","prototype","PropTypes","number","isRequired","string","Product","product","Card","_id","Img","src","image","Body","as","Title","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","pages","page","Pagination","Array","keys","map","x","key","active","listProducts","pageNumber","listProductDetails","createProduct","post","ProductCarousel","productTopRated","loading","products","error","useEffect","Carousel","pause","interval","alt","HomeScreen","match","params","productList","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","errorProductReview","successProductReview","success","alert","Image","fluid","ListGroup","ListGroupItem","countInStock","disabled","reviews","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","orders","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","successPay","loadingPay","orderDeliver","successDeliver","loadingDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingProduct","errorProduct","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","loadingDetails","errorDetails","productUpdate","uploadFileHandler","file","files","formData","FormData","append","header","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","exact","Boolean","hostname","reducer","combineReducers","action","existsItem","find","filter","cartItemsFromStorage","getItem","parse","userInFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.11f32bd5.chunk.js","sourcesContent":["import React from 'react'\nimport {Container,Row,Col} from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n        <footer>\n        <Container>\n            <Row>\n                <Col className='text-center py-3'> Coyright &copy; Kay-Shop\n                </Col>\n       </Row>\n       </Container>\n       </footer>\n    )\n}\n\nexport default Footer\n","import axios from 'axios';\nimport {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from '../constants/userConstants';\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({type : USER_LIST_RESET})\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    console.log(id)\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    \n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/users`, config);\n\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n   await axios.delete(`/api/users/${id}`, config);\n\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\n\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET= 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import React , {useState}from 'react'\nimport {Form , Button} from 'react-bootstrap'\n\nconst SearchBox = ({history}) => {\n    const [keyword  , setKeyword] = useState('')\n    const submitHandler = (e) =>{\n        e.preventDefault();\n        if(keyword.trim()){\n            history.push(`/search/${keyword}`)\n        }else{\n            history.push('/')\n        } \n\n    }\n\n    return (\n        <Form onSubmit = {submitHandler} inline>\n            <Form.Control\n            type = 'text' \n            name = 'q'\n            onChange = {e => setKeyword(e.target.value)}\n            placeholder = 'Search Products...'\n            className = 'mr-sm-2 ml-sm-5'\n\n            ></Form.Control>\n        <Button\n        type = 'submit'\n        variant = 'outline-success'\n        className = 'p-2'\n        ><i class=\"fas fa-search\"></i></Button>\n            \n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../actions/userAction';\nimport SearchBox from './SearchBox';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar  collapseOnSelect expand=\"lg\" bg='primary' variant='dark'>\n        <Container>\n\n          <LinkContainer to='/'>\n            <Navbar.Brand>Kay-Shop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n                      \n          <Route render = {({history})=><SearchBox history = {history}/>}></Route>\n\n          <Nav className='ml-auto ' >\n\n            <LinkContainer to='/cart'>\n              <Nav.Link>\n                <i className='fas fa-shopping-cart'></i>Cart\n              </Nav.Link>\n            </LinkContainer>\n            {userInfo ? (\n              <LinkContainer to='/profile'>\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n\n                    Log out\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </LinkContainer>\n            ) : (\n              <LinkContainer to='/login'>\n                <Nav.Link>\n                  <i className='fas fa-user'></i>Sign In\n                </Nav.Link>\n              </LinkContainer>\n            )}\n            {userInfo && userInfo.isAdmin && (\n              <NavDropdown title='Admin' id='adminmenu'>\n                <LinkContainer to='/admin/userlist'>\n                  <NavDropdown.Item>Users</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/admin/productlist'>\n                  <NavDropdown.Item>Products</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/admin/orderlist'>\n                  <NavDropdown.Item>Orders</NavDropdown.Item>\n                </LinkContainer>\n              </NavDropdown>\n            )}\n          </Nav>\n          </Navbar.Collapse>\n        </Container>\n\n        \n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n\n"," import React from 'react'\n import {Helmet} from 'react-helmet' \n \n const Meta = ({title , description , keywords }) => {\n     return (\n         <Helmet>\n             <title>{title}</title>\n             <meta name = 'description' content = {description}></meta>\n             <meta name = 'keyword' content = {keywords}></meta>\n         </Helmet>\n     )\n }\n\n Meta.defaultProps = {\n     title : 'Welcome to pro shop',\n     keywords : 'electronics , buy electronics , cheap electronics',\n     description : 'Better for lesser'\n\n }\n \n export default Meta\n ","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Rating = ({value,text,color}) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i style={{color}}\n                className={\n                    value >=1\n                    ? 'fas fa-star'\n                    : value >=0.5\n                    ? 'fas fa-star-half-alt'\n                    : 'far fa-tar'\n                }\n                ></i>\n            </span>\n            <span>\n            <i style={{color}}\n                className={\n                    value >=2\n                    ? 'fas fa-star'\n                    : value >=1.5\n                    ? 'fas fa-star-half-alt'\n                    : 'far fa-tar'\n                }\n                ></i>\n            </span>\n            <span>\n            <i style={{color}}\n                className={\n                    value >=3\n                    ? 'fas fa-star'\n                    : value >=2.5\n                    ? 'fas fa-star-half-alt'\n                    : 'far fa-tar'\n                }\n                ></i>\n            </span>\n            <span>\n            <i style={{color}}\n                className={\n                    value >=4\n                    ? 'fas fa-star'\n                    : value >=3.5\n                    ? 'fas fa-star-half-alt'\n                    : 'far fa-tar'\n                }\n                ></i>\n            </span>\n            <span>\n            <i style={{color}}\n                className={\n                    value >=5\n                    ? 'fas fa-star'\n                    : value >=4.5\n                    ? 'fas fa-star-half-alt'\n                    : 'far fa-tar'\n                }\n                ></i>\n            </span>\n\n            <span>{text && text}</span>\n            \n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color: '#f8e825'\n}\n\n\n// to check if something is messed up look in console\nRating.prototype = {\n    value : PropTypes.number.isRequired ,\n    text : PropTypes.string.isRequired,\n    color : PropTypes.string\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nimport Rating from './Rating'\n\n\nconst Product = ({product}) => {\n    return (\n        <Card className=' my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n            <Card.Img src ={product.image} variant='top'/>\n            </Link>\n\n            <Card.Body as='div' >\n            <Link to={`/product/${product._id}`}>\n                <Card.Title><strong>{product.name}</strong></Card.Title>\n            </Link>\n\n            <Card.Text as='div'>\n\n             <Rating\n             value = {product.rating}\n             text = {` ${product.numReviews} reviews`}\n             ></Rating>\n\n            </Card.Text>\n\n    <Card.Text as='h3'>${product.price}</Card.Text>\n                     \n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n\n\n// TODO : Card sizes are not equal vertically in big screen\n","import React from 'react'\nimport {Alert} from 'react-bootstrap'\n\nconst Message = ({variant,children}) => {\n    return (\n        <Alert variant = {variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant : 'info'\n}\n\nexport default Message\n","import React from 'react'\nimport {Spinner} from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner\n        animation = 'border'\n        role='status'\n        style={{\n            width : '100px' ,\n            height : '100px' ,\n            margin : 'auto' ,\n            display : 'block'}}\n        >\n            <span className='sr-only'>Loading...</span>\n            \n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({ pages, page, isAdmin = 'false', keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST , \n    PRODUCT_LIST_SUCCESS , \n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAIL_REQUEST,\n    PRODUCT_DETAIL_SUCCESS,\n    PRODUCT_DETAIL_FAIL,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_REQUEST ,\n  PRODUCT_CREATE_REQUEST ,\n  PRODUCT_CREATE_SUCCESS ,\n  PRODUCT_CREATE_FAIL ,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_SUCCESS\n} from '../constants/productConstants.js'\n\n    // thunk allows us to put a function inside a function\nexport const listProducts = (keyword = '' , pageNumber = '') => async(dispatch) =>{\n    try {\n        // will call the reducer to load to product \n        dispatch({type:PRODUCT_LIST_REQUEST})\n\n        const {data} = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n        dispatch({type:PRODUCT_LIST_SUCCESS ,\n            payload : data\n        })\n        \n    } catch (error) {\n\n        dispatch({type : PRODUCT_LIST_FAIL ,\n        payload : error.response && error.response.data.message \n                                ? error.response.data.message \n                                : error.response\n    })\n        \n    }\n}\n\n\nexport const listProductDetails = (id) => async(dispatch) =>{\n    try {\n        // will call the reducer to load to single product \n        dispatch({type:PRODUCT_DETAIL_REQUEST})\n\n        const {data} = await axios.get(`/api/products/${id}`)\n\n        dispatch({type:PRODUCT_DETAIL_SUCCESS ,\n            payload : data\n        })\n        \n    } catch (error) {\n\n        dispatch({type : PRODUCT_DETAIL_FAIL ,\n        payload : error.response && error.response.data.message \n                                ? error.response.data.message \n                                : error.response\n    })\n        \n    }\n}\n\n\n\nexport const deleteProduct  = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_DELETE_REQUEST,\n      });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n    await axios.delete(`/api/products/${id} `,config);\n  \n      // console.log(data)\n  \n      dispatch({\n        type: PRODUCT_DELETE_SUCCESS,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response,\n      });\n    }\n  };\n\n\nexport const createProduct  = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n  const {data} = await axios.post(`/api/products/ `,{}, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload : data \n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\nexport const updateProduct  = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type' : 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n  const {data} = await axios.put(`/api/products/${product._id}`,product, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload : data \n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\nexport const createProductReview  = (productId , review ) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type' : 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\nawait axios.post(`/api/products/${productId}/reviews`,review, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const listTopProducts = () => async(dispatch) =>{\n  try {\n      // will call the reducer to load to product \n      dispatch({type:PRODUCT_TOP_REQUEST})\n\n      const {data} = await axios.get('/api/products/top')\n\n      dispatch({type:PRODUCT_TOP_SUCCESS ,\n          payload : data\n      })\n      \n  } catch (error) {\n\n      dispatch({type : PRODUCT_TOP_FAIL ,\n      payload : error.response && error.response.data.message \n                              ? error.response.data.message \n                              : error.response\n  })\n      \n  }\n}\n  \n  \n    \n\n\n\n  \n  \n    \n\n\n\n  \n  \n    \n\n\n\n  \n  \n    \n\n\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAIL_REQUEST = 'PRODUCT_DETAIL_REQUEST'\nexport const PRODUCT_DETAIL_SUCCESS = 'PRODUCT_DETAIL_SUCCESS'\nexport const PRODUCT_DETAIL_FAIL = 'PRODUCT_DETAIL_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, Carousel } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Loader from './Loader';\nimport Message from './Message';\n\nimport { listTopProducts } from '../actions/productActions';\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { loading, products, error } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id} interval={1000}>\n          <Link to={`/product/${product._id}`}>\n            <img\n              className='d-block w-50 h-50'\n              src={product.image}\n              alt={product.name}\n            />\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React,{useEffect} from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\nimport { Col, Row } from 'react-bootstrap'\nimport Meta from '../components/Meta'\n\n\n\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\n\nimport {listProducts} from '../actions/productActions.js'\n\n\nconst HomeScreen = ({match}) => {\n    const keyword = match.params.keyword\n    const pageNumber = match.params.pageNumber || 1 \n\n    const dispatch = useDispatch()\n    const productList = useSelector( state => state.productList)\n    const {loading , error, products , pages , page} = productList;\n\n    useEffect(()=>{\n        dispatch(listProducts(keyword , pageNumber));\n    },[dispatch , keyword , pageNumber ]) // runs as soon as the page loads\n\n\n\n    return (\n        <>\n        <Meta/>\n        {!keyword && <ProductCarousel/>}\n        <h1>Latest Products</h1>\n        { loading ? <Loader/> :  error ? <Message variant='danger'>{error}</Message> : \n             <>\n             <Row>\n\n             {products.map(product => (\n                 <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                     <Product product = {product}></Product>\n                  </Col>\n             ))}\n             \n         </Row>\n         <Paginate pages = {pages} page = {page} keyword = {keyword ? keyword : ''}></Paginate>\n                </>\n        }\n       \n        </>\n    )\n}\n\nexport default HomeScreen\n","import React ,{useState ,useEffect} from 'react'\nimport {useDispatch,useSelector} from 'react-redux'\n\n\nimport {Link} from 'react-router-dom'\nimport {Row,Col,Image,ListGroup,Card,Button,ListGroupItem, Form} from 'react-bootstrap'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\n\nimport Rating from '../components/Rating'\n\nimport {listProductDetails , createProductReview } from '../actions/productActions.js'\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\n\n\n\nconst ProductScreen = ({history , match}) => {\n    const[qty,setQty] = useState(1) \n    const[rating,setRating] = useState(0) \n    const[comment,setComment] = useState('') \n\n    const dispatch = useDispatch();\n    const productDetails = useSelector( state => state.productDetails)\n    const {loading , error, product} = productDetails;\n\n    const productReviewCreate = useSelector( state => state.productReviewCreate)\n    const { error : errorProductReview, success : successProductReview} = productReviewCreate;\n\n    const userLogin = useSelector( state => state.userLogin)\n    const {userInfo} = userLogin;\n\n\n    useEffect(()=>{\n        if(successProductReview){\n            alert('Review Submitted .')\n            setRating(0)\n            setComment('')\n            dispatch({type : PRODUCT_CREATE_REVIEW_RESET})\n        }\n            dispatch(listProductDetails(match.params.id));\n    },[dispatch , match, successProductReview]) // runs as soon as the page loads\n    //asuync await creates a promise\n\n    const addToCardHandler  = () =>{\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id , {\n            rating  , comment \n        }))\n\n    }\n\n    return (\n        <>\n     \n\n        \n        <Link to='/' className='btn btn-light my-3'>Go Back</Link>  \n        { loading ? <Loader/> :  error ? <Message variant='danger'>{error}</Message> : \n<>\n<Meta title = {product.name}/>\n        <Row>\n            <Col md={6}>\n                <Image src={product.image} alt={product.name} fluid/>\n            </Col>\n\n            <Col md={3}>\n                <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h3>{product.name}</h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                          <Rating\n                          value={product.rating}\n                          text={`${product.numReviews} reviews`}\n                          />\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        <ListGroupItem>\n                        Description: {product.description}\n                        </ListGroupItem>\n                        \n                </ListGroup>\n\n            </Col>\n            <Col md={3}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroupItem>\n                            <Row>\n                                <Col>Price:</Col>\n                                <Col>\n                                    <strong>${product.price}</strong>\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                    </ListGroup>\n\n                    <ListGroup variant='flush'>\n                        <ListGroupItem>\n                            <Row>\n                                <Col>Status</Col>\n                                <Col>\n                                    <strong>{product.countInStock > 0? 'In stock ' : 'Out of Stock'}</strong>\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                        { product.countInStock > 0 && (\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Quantity </Col>\n                                    <Col>\n                                    <Form.Control as = 'select' value = {qty} onChange ={(e) =>\n                                        setQty(e.target.value)}>\n                                            \n                                            {[...Array(product.countInStock).keys()].map((x) =>(\n                                                <option key={x+1} value = {x+1} >\n                                                        {x+1}\n                                                </option>\n                                            ))}\n\n                                    </Form.Control>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                        )}\n                        <ListGroupItem>\n                            <Button \n                            onClick={addToCardHandler }\n                            className='btn-block' \n                            type='button'\n                            disabled={product.countInStock === 0 }\n                            >Add to Cart</Button>\n                        </ListGroupItem>\n\n                    </ListGroup>\n                </Card>\n            </Col>\n            </Row> \n            <Row>\n                <Col md = {6}>\n                    <h2>Reviews : </h2>\n                    {product.reviews.length === 0 && <Message>No reviews  </Message>}\n                  <ListGroup variant = 'flush'>\n                      {product.reviews.map( review => (\n                          <ListGroup.Item key = {review._id}>\n                            <strong>{review.name}</strong>\n                            <Rating value = {review.rating}/>\n                            <p>{review.createdAt.substring(0, 10 )}</p>\n                            <p>{review.comment}</p>\n                          </ListGroup.Item>\n                      ))}\n\n                      <ListGroup.Item>\n                          <h2>Write a customer review</h2>\n                      {errorProductReview &&<Message variant = 'danget'>{errorProductReview}</Message>}\n                          {userInfo ? (<Form onSubmit = {submitHandler}>\n                            <Form.Group controlId = 'rating'>\n                                <Form.Label>Rating</Form.Label>\n                                <Form.Control as = 'select' value = {rating} onChange= {\n                                    (e) =>setRating(e.target.value)\n                                }><option > Select...</option>\n                                    <option value = '1'> 1 - Poor.</option>\n                                <option value = '2'> 2 - Fair.</option>\n                                <option value = '3'> 3 - Good.</option>\n                                <option value = '4'> 4 - Very Good. </option>\n                                <option value = '5 '> 5 - Excellent.</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId = 'comment'>\n                                <Form.Label>Comments</Form.Label>\n                                <Form.Control\n                                as = 'textarea'\n                                row = '3'\n                                value = {comment}\n                                onChange = {(e) => setComment(e.target.value)}\n                                ></Form.Control>\n\n                            </Form.Group>\n                            <Button type = 'submit' variant = 'primary'>\n                                Submit\n                            </Button>\n\n                          </Form>) : ( <Message>\n                            Please <Link to='/login'>sign in </Link> , to write a review .\n                          </Message>)}\n                      </ListGroup.Item>\n                      </ListGroup>                        \n                </Col>\n            </Row>\n\n            </>\n          \n        }\n        \n        </>\n    )\n}\n\nexport default ProductScreen\n ","import axios from 'axios'\nimport {CART_ADD_ITEM,CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async(dispatch , getState) =>{\n    const {data} = await axios.get(`/api/products/${id}`)\n    dispatch(\n        {\n            type : CART_ADD_ITEM,\n            payload:{\n                product  : data._id,\n                name : data.name ,\n                image : data.image ,\n                price : data.price ,\n                countInStock : data.countInStock,\n                qty\n            }\n        }\n    )\n     localStorage.setItem('cartItems' , JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch,getState) => {\n    dispatch({\n        type : CART_REMOVE_ITEM,\n        payload : id\n    })\n    localStorage.setItem('cartItems' , JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type : CART_SAVE_SHIPPING_ADDRESS,\n        payload : data\n    })\n    localStorage.setItem('shippingAddress' , JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type : CART_SAVE_PAYMENT_METHOD,\n        payload : data\n    })\n    localStorage.setItem('paymentMethod'  , JSON.stringify(data))\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import React ,{useEffect} from 'react'\nimport {useDispatch , useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Row,Col,ListGroup ,Image , Form  , Button , Card} from 'react-bootstrap'\nimport {addToCart,removeFromCart} from '../actions/cartActions'\n\nimport Message from '../components/Message'\n\nconst CartScreen = ({match , location , history}) => {\n    const productId = match.params.id\n    const qty = location.search  ? Number(location.search.split('=')[1]): 1 // search gives everything after ?\n    // console.log(qty)\n    const dispatch  = useDispatch();\n\n   \n\n   const cart = useSelector(state => state.cart)\n\n   const removeFromCartHandler = (id) =>{ \n       dispatch(removeFromCart(id))\n   }\n\n   const checkoutHandler = ()=>{\n       history.push('/login?redirect=shipping')\n\n   }\n\n    const {cartItems} = cart\n\n    useEffect(() =>{\n        if(productId){\n            dispatch(addToCart(productId,qty))\n        }\n    } , [dispatch,productId,qty])\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping cart</h1>\n                {cartItems.length === 0  ? <Message>Your cart is emplty<Link to='/'> Go back!</Link></Message> \n                : (<ListGroup variant='flush '>\n                    {cartItems.map(item => (\n                        <ListGroup.Item key={item.product}>\n                            <Row>\n                                 <Col md={2}>\n                                     <Image src={item.image} alt={item.name} fluid rounded></Image>\n                                 </Col>\n                                 <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                 </Col>\n                    <Col md={2}>{item.price}</Col>\n                    <Col md={2}>\n\n                    <Form.Control as = 'select' value = {item.qty} onChange ={(e) =>dispatch(addToCart(\n                        item.product , Number(e.target.value)))}>\n                                            \n                                            {[...Array(item.countInStock).keys()].map((x) =>(\n                                                <option key={x+1} value = {x+1} >\n                                                        {x+1}\n                                                </option>\n                                            ))}\n\n                                    </Form.Control>\n\n                    </Col>\n                    <Col md={2} >\n                        <Button type='button' variant = 'light'\n                        onClick={()=>removeFromCartHandler(item.product)}>\n                            <i className ='fas fa fa-trash'></i>\n                        </Button>\n                    </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    ))\n                        \n                    }\n                </ListGroup>) }\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant ='flush'>\n                    <ListGroup.Item>\n                        <h2>\n                            Subtotal ({ cartItems.reduce((acc,item) => acc + item.qty, 0 )}) items.\n                        </h2>\n\n                        ${cartItems.reduce((acc,item) => acc + item.qty*item.price,0).toFixed(2)}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Button type = 'button'\n                         className='btn-block' \n                         disabled={ cartItems.length ===0} \n                         onClick={checkoutHandler}> Checkout</Button>\n                    </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        \n        </Row>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport {Container , Row , Col} from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className = 'justify-content-md-center'>\n                <Col xs={12} md={6}> \n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport{Form , Button , Row , Col} from 'react-bootstrap'\nimport {useDispatch , useSelector} from 'react-redux'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport {login} from '../actions/userAction.js'\n \n\nconst LoginScreen = ({location,history}) => {\n    const [email ,setEmail] = useState('')\n    const [password , setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {loading , error, userInfo} = userLogin\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(()=>{\n        if(userInfo){\n            history.push(redirect)\n        }\n    },[history,userInfo,redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In </h1>\n    {error && <Message variant='danger'>{error}</Message>}\n    {loading && <Loader/>}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId ='email'>\n                    <Form.Label >Email address</Form.Label>\n                    <Form.Control \n                    type='email' \n                    placeholder = 'Enter email.'\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='password'>\n                    <Form.Label >Password</Form.Label>\n                    <Form.Control \n                    type='password' \n                    placeholder = 'Enter password.'\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Button type = 'submit'\n                variant = 'primary'> \n                Sign In\n                </Button>\n           \n\n            <Row className='py-3'>\n                <Col>\n                \n                <Link to= {redirect? `/register?redirect=${redirect}` : '/register'}\n                >New customer? </Link>\n                </Col>\n\n            </Row>\n            </Form> \n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React ,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport{Form , Button , Row , Col} from 'react-bootstrap'\nimport {useDispatch , useSelector} from 'react-redux'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport {register} from '../actions/userAction.js'\n \n\nconst RegisterScreen = ({location,history}) => {\n    const [name ,setName] = useState('')\n    const [email ,setEmail] = useState('')\n    const [password , setPassword] = useState('')\n    const [confirmPassword , setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const {loading , error, userInfo} = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(()=>{\n        if(userInfo){\n            history.push(redirect)\n        }\n    },[history,userInfo,redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword){\n            setMessage('Passwords do not match.')\n        }else{\n            dispatch(register(name , email , password))\n        }\n        \n        //DISPATCH REGISTER\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up </h1>\n    {error && <Message variant='danger'>{error}</Message>}\n    {message && <Message variant='danger'>{message}</Message>}\n    {loading && <Loader/>}\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId ='name'>\n                    <Form.Label >Name </Form.Label>\n                    <Form.Control \n                    type='name' \n                    placeholder = 'Enter name.'\n                    value={name}\n                    onChange={(e)=>setName(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='email'>\n                    <Form.Label >Email address</Form.Label>\n                    <Form.Control \n                    type='email' \n                    placeholder = 'Enter email.'\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='password'>\n                    <Form.Label >Password</Form.Label>\n                    <Form.Control \n                    type='password' \n                    placeholder = 'Enter password.'\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='confirmPassword'>\n                    <Form.Label >Confirm  Password</Form.Label>\n                    <Form.Control \n                    type='password' \n                    placeholder = 'Re-Enter password.'\n                    value={confirmPassword}\n                    onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Button type = 'submit'\n                variant = 'primary'> \n               Register\n                </Button>\n           \n\n            <Row className='py-3'>\n                <Col>\n                Have an account {' '}\n                <Link to= {redirect? `/login?redirect=${redirect}` : '/login'}\n                >Sign in. </Link>\n                </Col>\n\n            </Row>\n            </Form> \n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React ,{useState,useEffect} from 'react'\nimport{Form , Button , Row , Col, Table} from 'react-bootstrap'\nimport {useDispatch , useSelector} from 'react-redux'\nimport {LinkContainer} from 'react-router-bootstrap'\n\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nimport {getUserDetails,updateUserProfile} from '../actions/userAction.js'\nimport {listMyOrders} from '../actions/orderActions.js'\n \n\nconst ProfileScreen = ({location,history}) => {\n    const [name ,setName] = useState('')\n    const [email ,setEmail] = useState('')\n\n    const [password , setPassword] = useState('')\n    const [confirmPassword , setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {user ,loading , error } =  userDetails\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} =  userUpdateProfile\n   \n    const orderListMy = useSelector(state => state.orderListMy)\n    const {orders ,loading : loadingOrders , error : errorOrders } =  orderListMy\n\n\n    useEffect(()=>{\n        if(!userInfo){\n            history.push('/login')\n        }else{\n            // console.log(loading)\n            if(!user.name){\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n\n        }\n    },[dispatch ,history,userInfo,user])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword){\n            setMessage('Passwords do not match.')\n        }else{\n           dispatch(updateUserProfile({id: user._id ,name , email,password} )) \n        }\n        \n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n            <h2>User Profile</h2>\n    {error && <Message variant='danger'>{error}</Message>}\n    {success && <Message variant='success'>Profile updated</Message>}\n    {message && <Message variant='danger'>{message}</Message>}\n    {loading && <Loader/>}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId ='name'>\n                    <Form.Label >Name </Form.Label>\n                    <Form.Control \n                    type='name' \n                    placeholder = 'Enter name.'\n                    value={name}\n                    onChange={(e)=>setName(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='email'>\n                    <Form.Label >Email address</Form.Label>\n                    <Form.Control \n                    type='email' \n                    placeholder = 'Enter email.'\n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='password'>\n                    <Form.Label >Password</Form.Label>\n                    <Form.Control \n                    type='password' \n                    placeholder = 'Enter password.'\n                    value={password}\n                    onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId ='confirmPassword'>\n                    <Form.Label >Confirm  Password</Form.Label>\n                    <Form.Control \n                    type='password' \n                    placeholder = 'Re-Enter password.'\n                    value={confirmPassword}\n                    onChange={(e)=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n\n                <Button type = 'submit'\n                variant = 'primary'> \n               Update\n                </Button>\n\n            </Form>\n            </Col>\n            \n            <Col md={9}>\n                <h2>My orders.</h2>\n                {loadingOrders ? <Loader/> :  errorOrders   ? <Message variant='danger'\n                >{errorOrders}</Message> : (\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                            </tr>\n\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0,10)}</td>\n                                    <td>{order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) :(\n                                        <i className='fas fa-times' style = {{ color : 'red'}}></i>\n                                    )}</td>\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0,10) :(\n                                        <i className='fas fa-times' style = {{ color : 'red'}}></i>\n                                    )}</td>   \n                                    <td>\n                                        <LinkContainer to = {`/order/${order._id}`}>\n                                            <Button className = 'btn-sm' variant='light'>Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n\n    )\n}\n\nexport default ProfileScreen\n","import axios from 'axios';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n     console.log(data)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders/myorders `,config);\n\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(`/api/orders`,config);\n\n     console.log(data)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      },\n    };\n    const { data } = await axios.put(`/api/orders/${order._id}/deliver`,{}, config);\n\n    // console.log(data)\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    });\n  }\n};\n\n\n\n","import React from 'react'\nimport {Nav} from 'react-bootstrap'\n import {LinkContainer} from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1?(<LinkContainer to = '/login'>\n                    <Nav.Link>Sign In</Nav.Link>\n                </LinkContainer>):<Nav.Link disabled>Sign In</Nav.Link>}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2?(<LinkContainer to = '/shipping'>\n                    <Nav.Link>Shipping</Nav.Link>\n                </LinkContainer>):<Nav.Link disabled>Shipping</Nav.Link>}\n            </Nav.Item>\n            <Nav.Item>\n                {step3?(<LinkContainer to = '/payment'>\n                    <Nav.Link>Payment</Nav.Link>\n                </LinkContainer>):<Nav.Link disabled>Payment</Nav.Link>}\n            </Nav.Item>\n            <Nav.Item>\n                {step4?(<LinkContainer to = '/placeorder'>\n                    <Nav.Link>Place Order</Nav.Link>\n                </LinkContainer>):<Nav.Link disabled>Place Order </Nav.Link>}\n            </Nav.Item>\n            \n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React ,{useState} from 'react'\nimport{Form , Button } from 'react-bootstrap'\nimport {useDispatch , useSelector} from 'react-redux'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress} from '../actions/cartActions'\n\n \n\nconst ShippingScreen = ({history}) => {\n\n    const  dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart) \n    const {shippingAddress} = cart\n\n    const submitHandler = (e)=>{\n\n        e.preventDefault()\n        dispatch(saveShippingAddress({address , city , postalCode , country}))\n        history.push('/payment')\n\n    }\n\n    const [address , setAddress] = useState(shippingAddress.address)\n    const [city , setCity] = useState(shippingAddress.city)\n    const [postalCode , setPostalCode] = useState(shippingAddress.postalCode)\n    const [country , setCountry] = useState(shippingAddress.country)\n\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2></CheckoutSteps>\n            <h1>Shipping</h1>\n\n            <Form onSubmit={submitHandler}>\n\n            <Form.Group controlId ='address'>\n                    <Form.Label >Address</Form.Label>\n                    <Form.Control \n                    type='text' \n                    placeholder = 'Enter address.'\n                    value={address}\n                    required\n                    onChange={(e)=>setAddress(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId ='city'>\n                    <Form.Label >City</Form.Label>\n                    <Form.Control \n                    type='text' \n                    placeholder = 'Enter City.'\n                    value={city}\n                    required\n                    onChange={(e)=>setCity(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId ='postalCode'>\n                    <Form.Label >Postal Code</Form.Label>\n                    <Form.Control \n                    type='text' \n                    placeholder = 'Enter Postal Code.'\n                    value={postalCode}\n                    required\n                    onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId ='country'>\n                    <Form.Label >Country</Form.Label>\n                    <Form.Control \n                    type='text' \n                    placeholder = 'Enter Country.'\n                    value={country}\n                    required\n                    onChange={(e)=>setCountry(e.target.value)}></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>Continue</Button>\n\n            </Form>\n           \n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React ,{useState} from 'react'\nimport{Form , Button , Col } from 'react-bootstrap'\nimport {useDispatch , useSelector} from 'react-redux'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport FormContainer from '../components/FormContainer'\nimport { savePaymentMethod} from '../actions/cartActions'\n\n \n\nconst PaymentScreen = ({history}) => {\n\n    const  dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart) \n    const {shippingAddress} = cart\n\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n\n    const [paymentMethod , setPaymentMethod] = useState('PayPal')\n\n    const submitHandler = (e)=>{\n\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n\n    }\n\n\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\n            <h1>Payment Method</h1>\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as ='legend'>Select Method</Form.Label>\n               \n            <Col>\n            <Form.Check\n            type='radio'\n            label ='PayPal or Credit'\n            id='PayPal'\n            name='paymentMethod'\n            value='PayPal'\n            checked\n            onChange={(e)=>setPaymentMethod(e.target.value)}\n            >\n\n            </Form.Check>\n\n            {/* <Form.Check\n            type='radio'\n            label ='Interact'\n            id='Interact'\n            name='paymentMethod'\n            value='Interact'\n            checked\n            onChange={(e)=>setPaymentMethod(e.target.value)}\n            >\n\n            </Form.Check> */}\n            </Col>\n            </Form.Group>\n\n\n            <Button type='submit' variant='primary'>Continue</Button>\n\n            </Form>\n           \n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useEffect} from 'react';\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nimport {createOrder} from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({history}) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart);\n    const addDecimals =(num) =>{\n        return (Math.round(num*100)/100).toFixed(2)\n    }\n\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce(\n      (acc,item) => acc + item.price * item.qty,\n      0\n  ))\n  cart.shippingPrice = addDecimals(cart.itemsPrice < 100 ? 10 : 0)\n  cart.taxPrice = addDecimals(Number((0.13*cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) +Number(cart.taxPrice))\n\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const {order , success , error} = orderCreate\n\n  useEffect(() => {\n    if(success){\n      history.push(`/order/${order._id}`)\n    }\n    //eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(createOrder({\n      orderItems : cart.cartItems ,\n      shippingAddress : cart.shippingAddress,\n      paymentMethod : cart.paymentMethod,\n      itemsPrice : cart.itemsPrice,\n      shippingPrice : cart.shippingPrice,\n      taxPrice : cart.taxPrice,\n      totalPrice : cart.totalPrice\n\n    }))\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address : </strong>\n                {cart.shippingAddress.address} ,{cart.shippingAddress.city} ,\n                {cart.shippingAddress.postalCode} ,\n                {cart.shippingAddress.country}{' '}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method : </strong>\n                {cart.paymentMethod}{' '}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message> Your cart is empty !</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                  {error&&<Message variant ='danger' >{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions';\n\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nconst OrderScreen = ({ match ,history}) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { success: successPay, loading: loadingPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { success: successDeliver, loading: loadingDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo} = userLogin;\n\n  if (!loading && order) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if(!userInfo){\n      history.push('/login')\n    }\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || order._id !== orderId || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay ,successDeliver , history]);\n\n \n  const successPaymentHandler = (paymentResult) => {\n    // console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                {' '}\n                <strong>Name : </strong>\n                {order.user.name}{' '}\n              </p>\n              <p>\n                <a href={`mailto:${order.user.email}`}>\n                  Email : {order.user.email}\n                </a>\n              </p>\n              <p>\n                <strong>Address : </strong>\n                {order.shippingAddress.address} ,{order.shippingAddress.city} ,\n                {order.shippingAddress.postalCode} ,\n                {order.shippingAddress.country}{' '}\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n              ) : (\n                <Message variant='danger'>Not delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method : </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message> Order is empty !</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={Number(order.totalPrice)}\n                      onSuccess={successPaymentHandler}\n                    ></PayPalButton>\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader/>}\n\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                  type='button'\n                  className = 'btn btn-block'\n                  onClick = {deliverHandler}\n                  >\n                    Mark as Deliver\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nimport { listUsers ,deleteUser } from '../actions/userAction.js';\n\nconst UserListScreen = ({history}) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n    \n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success : successDelete } = userDelete;\n\n\n  \n\n  useEffect(() => {\n    if(userInfo && userInfo.isAdmin){\n      dispatch(listUsers());\n    }else{\n      history.push('/login')\n    }\n    \n  }, [dispatch,history , successDelete , userInfo]);\n\n  const deleteHandler = (id) =>{\n    if(window.confirm('Are you sure to delete the user ?' ) ){\n      dispatch(deleteUser(id))\n    }\n   \n}\n  return (\n    <>\n      <h1>Users : </h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer\n                  to={`/admin/user/${user._id}/edit`}\n                  >\n                      <Button variant = 'light' className='btn-sm'> \n                      <i className='fas fa-edit'></i></Button>\n                  </LinkContainer>\n                      {user._id!==userInfo._id&&\n                        <Button className='btn-sm'\n                        variant = 'danger'\n                        onClick = {() => deleteHandler(user._id)}\n      \n                        >\n                            <i className='fas fa-trash'></i>\n                        </Button>\n                      }\n                \n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\n\nimport { getUserDetails , updateUser } from '../actions/userAction.js';\nimport {USER_UPDATE_RESET} from '../constants/userConstants';\n\nconst UserEditScreen = ({ match , history}) => {\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const { loading : loadingUpdate, error : errorUpdate, success : successUpdate } = userUpdate;\n\n  //  console.log(userDetails)\n\n  useEffect(() => {\n    if(!userInfo){\n      history.push('/login')\n    }\n    if(successUpdate){\n      dispatch( {\n        type : USER_UPDATE_RESET\n      })\n      history.push('/admin/userlist')\n    }else {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }}\n  }, [user , history , successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({_id : userId , name , email , isAdmin , history}))\n  };\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit user</h1>\n        {loadingUpdate&&<Loader/>}\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name </Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name.'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email.'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            {user._id!==userInfo._id&&\n            <Form.Group controlId='isAdmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is admin?'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n            }\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table, Row, Col, Pagination } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\n\nimport {\n  createProduct,\n  deleteProduct,\n  listProducts,\n} from '../actions/productActions.js';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingProduct,\n    error: errorProduct,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  useEffect(() => {\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login');\n    }\n    dispatch({ type: PRODUCT_CREATE_RESET });\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}`);\n    }\n\n    dispatch(listProducts('', pageNumber));\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createProduct,\n    pageNumber,\n  ]);\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure to delete the product ?')) {\n      dispatch(deleteProduct(id));\n    }\n  };\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n      {loadingProduct && <Loader />}\n      {errorProduct && <Message variant='danger'>{errorProduct}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th> </th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      className='btn-sm'\n                      variant='danger'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true}>\n            {' '}\n          </Paginate>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\n\nimport {listProductDetails , updateProduct} from '../actions/productActions.js';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = ({ match , history}) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading : loadingDetails, error : errorDetails, product} = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const { loading : loadingUpdate, error : errorUpdate, success : successUpdate} = productUpdate;\n\n  //  console.log(userDetails)\n\n  useEffect(() => {\n    if(successUpdate){\n      dispatch({type : PRODUCT_UPDATE_RESET})\n      history.push('/admin/productlist')\n    }else{\n   \n    if (!product.name || product._id !== productId) {\n      dispatch(listProductDetails(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setBrand(product.brand);\n\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setDescription(product.description);\n    }}\n  }\n  , [product , productId,  history , successUpdate ,dispatch]);\n\n  const uploadFileHandler = async (e) =>{\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image',file)\n    setUploading(true)\n    try {\n      const config = {\n        header : {\n          'Content-Type' : 'multipart/form-data' \n\n        }\n      }\n\n      const {data} = await axios.post('/api/upload' , formData , config)\n      setImage(data)\n      setUploading(false)\n\n      \n    } catch (error) {\n      setUploading(false)\n      console.log(error)\n      \n    }\n\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id : productId ,\n      name , \n      price , \n      image , \n      brand , \n      category ,\n      description ,\n      countInStock\n    }))\n    };\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit product</h1>\n        {loadingUpdate&&<Loader/>}\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n        {loadingDetails ? (\n          <Loader />\n        ) : errorDetails ? (\n          <Message variant='danger'>{errorDetails}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name </Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name.'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price.'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n           \n            </Form.Group>\n            {uploading && <Loader/>}\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url.'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n\n            </Form.Group>\n\n            <Form.Group>\n\n              <Form.File\n              id='image-file'\n              label='Choose file'\n              custom\n              onChange={uploadFileHandler}\n              ></Form.File>\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand.'\n                value={brand} \n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count in stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter count in stock.'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category.'\n                value={category} \n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description.'\n                value={description} \n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nimport { listOrders } from '../actions/orderActions.js';\n\n\nconst OrderListScreen = ({history}) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading , error, orders } = orderList\n    // console.log(loading)\n    \n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n\n  useEffect(() => {\n    if(userInfo && userInfo.isAdmin){\n      dispatch(listOrders());\n    }else{\n      history.push('/login')\n    }\n    \n  }, [dispatch,history , userInfo]);\n\n\n  return (\n    <>\n      <h1>Orders : </h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVER</th>\n              <th> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0,10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0,10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered? (\n                    order.deliveredAt.substring(0,10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer\n                  to={`/order/${order._id}`}\n                  >\n                       <Button className='btn-sm'\n                        variant = 'light'\n                        >Details\n                        </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n\n                  }\nexport default OrderListScreen;\n","import React from 'react';\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport Header from './components/Header';\n\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n          />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer ,\n  productReviewCreateReducer,\n  productTopRatedReducer\n} from './reducers/productreducers';\nimport { cartReducer } from './reducers/cartreducers';\nimport {\n  userDetailsReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer\n} from './reducers/userReducers';\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer\n} from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate : userUpdateReducer,\n  productDelete :  productDeleteReducer,\n  productCreate : productCreateReducer ,\n  productUpdate : productUpdateReducer ,\n  orderList : orderListReducer ,\n  orderDeliver : orderDeliverReducer ,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated : productTopRatedReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst userInFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInFromStorage },\n};\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAIL_REQUEST,\n  PRODUCT_DETAIL_SUCCESS,\n  PRODUCT_DETAIL_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants.js';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload.products , pages : action.payload.pages , \n      page : action.payload.page };\n\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAIL_REQUEST:\n      return { loading: true, ...state };\n\n    case PRODUCT_DETAIL_SUCCESS:\n      return { loading: false, product: action.payload };\n\n    case PRODUCT_DETAIL_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n\n    default:\n      return state;\n  }\n};\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true};\n\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\n\nexport const productTopRatedReducer = (state = {products : []}, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true , products : [] };\n\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products : action.payload};\n\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n  \n    default:\n      return state;\n  }\n};\n","import {\n  CART_REMOVE_ITEM,\n  CART_ADD_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existsItem = state.cartItems.find(\n        (x) => x.product === item.product\n      );\n      if (existsItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existsItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_DETAILS_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_DETAILS_RESET:\n      return { user: {} };\n\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_LIST_RESET:\n      return { users: [] };\n\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n      case USER_DELETE_REQUEST:\n        return { loading: true };\n  \n      case USER_DELETE_SUCCESS:\n        return { loading: false, success: true};\n  \n      case USER_DELETE_FAIL:\n        return { loading: false, error: action.payload };\n  \n      default:\n        return state;\n    }\n  };\n\n  export const userUpdateReducer = (state = { user : {}}, action) => {\n    switch (action.type) {\n      case USER_UPDATE_REQUEST:\n        return { loading: true };\n  \n      case USER_UPDATE_SUCCESS:\n        return { loading: false, success: true};\n  \n      case USER_UPDATE_FAIL:\n        return { loading: false, error: action.payload };\n\n        case USER_UPDATE_RESET:\n          return { user : {} };\n  \n      default:\n        return state;\n    }\n  };\n","import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_RESET,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n      case ORDER_LIST_MY_RESET:\n        return { orders : [] \n  \n        };\n    default:\n      return state;\n  \n}}\n\n\nexport const orderListReducer = (state = {orders:[]}, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  \n}}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\n\nimport './bootstrap.min.css'\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store.js'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}